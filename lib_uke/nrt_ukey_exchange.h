/*
 * Copyright (C) 2011-2016 Intel Corporation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *   * Neither the name of Intel Corporation nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/* Copyright (c) 2018 Aalto University
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef _NRT_UKEY_EXCHANGE_H_
#define _NRT_UKEY_EXCHANGE_H_

#include "sgx_eid.h"
#include "sgx_defs.h"
#include "sgx_key_exchange.h"
#include "nrt_key_exchange.h"

#ifdef  __cplusplus
extern "C" {
#endif

typedef uint32_t nrt_ra_context_t;

typedef sgx_status_t (* nrt_ecall_set_gb_trusted_t)(
    sgx_enclave_id_t eid,
    sgx_status_t* retval,
    nrt_ra_context_t context,
    const sgx_ec256_public_t *g_b);

typedef sgx_status_t (* nrt_ecall_create_report_trusted_t)(
    sgx_enclave_id_t eid,
    sgx_status_t* retval,
    nrt_ra_context_t context,
    const sgx_target_info_t *p_qe_target,
    sgx_report_t *p_report,
    sgx_quote_nonce_t* nonce);

typedef sgx_status_t (* nrt_ecall_get_quote_trusted_t)(
    sgx_enclave_id_t eid,
    sgx_status_t* retval,
    nrt_ra_context_t context,
    uint32_t quote_size,
    sgx_report_t* qe_report,
    nrt_ra_msg_quote_t *p_msg_quote,
    uint32_t msg_quote_size);

/*
 * nrt_ra_get_quote is used to get the quote from the enclave and generate a
 * message with the quote and ga to send
 * to the service provider. If the service provider accepts the message,
 * session keys between the application enclave and the service
 * provider are generated. The application enclave would use sgx_ra_get_keys
 * function to retrieve the negotiated keys (after receiving the attestation
 * result message) and use sgx_ra_close function to
 * release the context of the remote attestation and key exchange process.
 *
 * @param context       Context returned by the nrt_ra_init function inside the
 *                      application enclave.
 * @param eid           ID of the application enclave which is going to be
 *                      attested.
 * @param
 * qe_target_info       From sgx_init_quote.
 *
 * @param
 * p_create_report      Function pointer of the ECALL proxy nrt_create_report
 *                      generated by sgx_edger8r. The application enclave should
 *                      link with nrt_tke library and import the
 *                      nrt_tke.edl in the application enclave's EDL
 *                      file to expose the ECALL proxy for nrt_create_report.
 * @param p_get_quote   Function pointer of the ECALL proxy nrt_ra_get_quote_trusted
 *                      generated by sgx_edger8r. The application enclave should
 *                      link with nrt_tke library and import the
 *                      nrt_tke.edl in the application enclave's EDL
 *                      file to expose the ECALL proxy for nrt_ra_get_quote_trusted.
 * @param pp_msg_quote  nrt_ra_msg_quote_t message to be sent to the service
 *                      provider. The message buffer is allocated by the
 *                      nrt_uke library. The caller should free the
 *                      buffer after use.
 * @param
 * p_msg_quote_size   The length of msg3 (in bytes).
 *
 * @return sgx_status_t SGX_SUCCESS                     Indicates success.
 *                      SGX_ERROR_INVALID_PARAMETER     Invalid input parameters
 *                                                      detected.
 *                      SGX_ERROR_AE_INVALID_EPIDBLOB   The EPID blob is
 *                                                      corrupted.
 *                      SGX_ERROR_INVALID_STATE         SGX API is invoked in
 *                                                      incorrect order or
 *                                                      state.
 *                      SGX_ERROR_EPID_MEMBER_REVOKED   The EPID group
 *                                                      membership revoked.
 *                      SGX_ERROR_INVALID_SIGNATURE     The signature is invalid.
 *                      SGX_ERROR_MAC_MISMATCH          Indicates verification
 *                                                      error for reports, sealed 
 *                                                      data, etc.
 *                      SGX_ERROR_KDF_MISMATCH          Indicates key derivation
 *                                                      function doesn't match.
 *                      SGX_ERROR_BUSY                  The requested service is
 *                                                      temporarily not
 *                                                      available.
 *                      SGX_ERROR_UPDATE_NEEDED         SGX needs to be updated.
 *                      SGX_ERROR_SERVICE_UNAVAILABLE   The AE service did not
 *                                                      respond.
 *                      SGX_ERROR_SERVICE_TIMEOUT       A request to the AE
 *                                                      service timed out.
 *                      SGX_ERROR_NETWORK_FAILURE       Network connecting or
 *                                                      proxy setting issue was
 *                                                      encountered.
 *                      SGX_ERROR_OUT_OF_MEMORY         There is not enough
 *                                                      memory available to
 *                                                      complete this operation.
 *                      SGX_ERROR_UNEXPECTED            Indicates an unexpected
 *                                                      error occurs.
 *                      And other possible return code from sgx_ecall.
 */
sgx_status_t SGXAPI nrt_ra_get_quote(
    nrt_ra_context_t context,
    sgx_enclave_id_t eid,
    sgx_target_info_t *qe_target_info,
    const sgx_spid_t *spid,
    nrt_ecall_create_report_trusted_t p_create_report,
    nrt_ecall_get_quote_trusted_t p_get_quote,
    nrt_ra_msg_quote_t **pp_msg_quote,
    uint32_t *p_msg_quote_size);

/*
 * nrt_ra_get_set_gb is used to provide g_b of DH key exchange into the enclave
 *
 * @param context       Context returned by the nrt_ra_init function inside the
 *                      application enclave.
 * @param eid           ID of the application enclave which is going to be
 *                      attested.
 * @param g_b           G_b returned by the service provider
 *
 * @return sgx_status_t SGX_SUCCESS                     Indicates success.
 *                      SGX_ERROR_INVALID_PARAMETER     Invalid input parameters
 *                                                      detected.
 *                      SGX_ERROR_AE_INVALID_EPIDBLOB   The EPID blob is
 *                                                      corrupted.
 *                      SGX_ERROR_INVALID_STATE         SGX API is invoked in
 *                                                      incorrect order or
 *                                                      state.
 *                      SGX_ERROR_EPID_MEMBER_REVOKED   The EPID group
 *                                                      membership revoked.
 *                      SGX_ERROR_INVALID_SIGNATURE     The signature is invalid.
 *                      SGX_ERROR_MAC_MISMATCH          Indicates verification
 *                                                      error for reports, sealed 
 *                                                      data, etc.
 *                      SGX_ERROR_KDF_MISMATCH          Indicates key derivation
 *                                                      function doesn't match.
 *                      SGX_ERROR_BUSY                  The requested service is
 *                                                      temporarily not
 *                                                      available.
 *                      SGX_ERROR_UPDATE_NEEDED         SGX needs to be updated.
 *                      SGX_ERROR_SERVICE_UNAVAILABLE   The AE service did not
 *                                                      respond.
 *                      SGX_ERROR_SERVICE_TIMEOUT       A request to the AE
 *                                                      service timed out.
 *                      SGX_ERROR_NETWORK_FAILURE       Network connecting or
 *                                                      proxy setting issue was
 *                                                      encountered.
 *                      SGX_ERROR_OUT_OF_MEMORY         There is not enough
 *                                                      memory available to
 *                                                      complete this operation.
 *                      SGX_ERROR_UNEXPECTED            Indicates an unexpected
 *                                                      error occurs.
 *                      And other possible return code from sgx_ecall.
 */
sgx_status_t SGXAPI nrt_ra_set_gb(
    nrt_ra_context_t context,
    sgx_enclave_id_t eid,
    nrt_ecall_set_gb_trusted_t p_set_gb,
    const sgx_ec256_public_t *g_b);

#ifdef  __cplusplus
}
#endif

#endif
